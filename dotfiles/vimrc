" Setup:
" After copying this file to your home directory, run the bin/setup-vim
" script to install the needed plugins.

" *** Vundle Config ***
" :PluginInstall ~ to install all listed Plugins
set nocompatible
filetype off
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" --- Open Plugins ---
" Plugin Manager
Plugin 'gmarik/Vundle.vim'
" Color Scheme
Plugin 'joshdick/onedark.vim'
" Zen Mode :Goyo
Plugin 'junegunn/goyo.vim'
" File Tree
Plugin 'preservim/nerdtree'
" Linting
Plugin 'w0rp/ale'
" Python
Plugin 'vim-scripts/indentpython.vim'
Bundle 'Valloric/YouCompleteMe'
Plugin 'vim-syntastic/syntastic'
" JavaScript
Plugin 'mxw/vim-jsx'
Plugin 'pangloss/vim-javascript'
" --- Close Plugins ---
call vundle#end()


" Custom Background Color
if (has("autocmd") && !has("gui_running"))
	augroup colors
		autocmd!
		let s:background = { "gui": "#1D1D1D", "cterm": "235", "cterm16": "0" } " Original #282C34
		autocmd ColorScheme * call onedark#set_highlight("Normal", { "bg": s:background }) "No `fg` setting
	augroup END
endif


" Plugin Settings
let g:syntastic_python_checkers = ['python']
let g:syntastic_python_python_exec = 'python3'
let g:ycm_autoclose_preview_window_after_completion=1
let g:goyo_width = '60%'
let g:goyo_height = '100%'
let g:goyo_linenr = 1
let g:NERDTreeMinimalUI=1
let g:NERDTreeDirArrows=1
let g:NERDTreeStatusline="%#NonText#"
let g:laststatus=0
let python_highlight_all=1
let b:ale_linters = { 'javascript': ['prettier', 'eslint'], 'python': ['pylint', 'flake8', 'mypy'] }
let g:ale_fixers={ 'javascript': ['prettier', 'eslint'], 'python': ['black', 'isort'] }
let g:ale_fix_on_save=1
colorscheme onedark


" *** Global Options ***
filetype plugin indent on
syntax on
set tabstop=2
set number
set splitbelow
set splitright
set encoding=utf-8
set backspace=indent,eol,start " Allow insert Backspace

" Enable background colors
set termguicolors
let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
set background=dark


" Navigate Splits
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" Escape remap
inoremap kj <esc>
cnoremap kj <C-C>

" Goyo Quit
function! s:goyo_enter()
	let b:quitting = 0
	let b:quitting_bang = 0
	autocmd QuitPre <buffer> let b:quitting = 1
	cabbrev <buffer> q! let b:quitting_bang = 1 <bar> q!
endfunction

function! s:goyo_leave()
	" Quit Vim if this is the only remaining buffer
  if b:quitting && len(filter(range(1, bufnr('$')), 'buflisted(v:val)')) == 1
    if b:quitting_bang
			qa!
		else
			qa
		endif
	endif
endfunction

autocmd! User GoyoEnter call <SID>goyo_enter()
autocmd! User GoyoLeave call <SID>goyo_leave()


" Auto NERDTree
map <C-\> :NERDTreeToggle<CR>
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif


" Toggle Status Line
let s:hidden_all = 0
function! ToggleHiddenAll()
	if s:hidden_all  == 0
		let s:hidden_all = 1
		set noshowmode
		set noruler
		set laststatus=0
		set noshowcmd
	else
		let s:hidden_all = 0
		set showmode
		set ruler
		set laststatus=2
		set showcmd
	endif
endfunction
:call ToggleHiddenAll() " Hide Status Line by default
nnoremap <S-h> :call ToggleHiddenAll()<CR>


